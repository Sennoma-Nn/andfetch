#!/data/data/com.termux/files/usr/bin/env nu

def get_ascii_colors [ icon ] {
    let icon_key = $icon  | str downcase

    let colors = {
        oneplus: ["\e[31m", "", "", ""]
        xiaomi: ["\e[38;2;255;103;0m", "", "", ""]
        redmi: ["\e[38;2;255;103;0m", "", "", ""]
        oppo: ["\e[32m", "", "", ""]
        google: ["\e[34m", "\e[33m", "\e[32m", "\e[31m"]
        vivo: ["\e[34m", "\e[37m", "", ""]
        huawei: ["\e[31m", "", "", ""]
        realme: ["\e[33m", "", "", ""]
    }

    if ($icon_key in $colors) {
        echo $colors | get $icon_key
    } else {
        echo ["\e[32m", "\e[37m", "", ""]
    }
}

def get_ascii_icon [ icon ] {
    let icon_key = $icon  | str downcase
    let icon_colors = get_ascii_colors $icon_key
    let ascii_icons = {

oneplus: 
$"($icon_colors.0)                      ██    
($icon_colors.0)                      ██    
($icon_colors.0)████████████████  ██████████
($icon_colors.0)██                    ██    
($icon_colors.0)██                    ██    
($icon_colors.0)██      █████               
($icon_colors.0)██         ██         ██    
($icon_colors.0)██         ██         ██    
($icon_colors.0)██         ██         ██    
($icon_colors.0)██         ██         ██    
($icon_colors.0)██      ████████      ██    
($icon_colors.0)██                    ██    
($icon_colors.0)██                    ██    
($icon_colors.0)████████████████████████    
                            "

xiaomi: 
$"($icon_colors.0) .llllllllllllllllllllllllllllllll. 
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)lllllll              'lll    lllllll
($icon_colors.0)lllllll    lllllll.    ll    lllllll
($icon_colors.0)lllllll    ll    ll    ll    lllllll
($icon_colors.0)lllllll    ll    ll    ll    lllllll
($icon_colors.0)lllllll    ll    ll    ll    lllllll
($icon_colors.0)lllllll    ll    ll    ll    lllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0) 'llllllllllllllllllllllllllllllll' 
                                    "

redmi: 
$"($icon_colors.0) .llllllllllllllllllllllllllllllll. 
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)lllllll              'lll    lllllll
($icon_colors.0)lllllll    lllllll.    ll    lllllll
($icon_colors.0)lllllll    ll    ll    ll    lllllll
($icon_colors.0)lllllll    ll    ll    ll    lllllll
($icon_colors.0)lllllll    ll    ll    ll    lllllll
($icon_colors.0)lllllll    ll    ll    ll    lllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0)llllllllllllllllllllllllllllllllllll
($icon_colors.0) 'llllllllllllllllllllllllllllllll' 
                                    "

oppo: 
$"($icon_colors.0)      .~:!7?JJ??79~.      
($icon_colors.0)   .QYPGBBGGPPGGGBBG5P.   
($icon_colors.0) .?GBBP?~'      '~7YGBGY. 
($icon_colors.0)~5BBG~              ~5BBG~
($icon_colors.0)6BGB~                ~GGB5
($icon_colors.0)6BGB~                ~PGB5
($icon_colors.0)~PBBP~              ~YBBG~
($icon_colors.0) 'JGBB57~.      .~!JGBB5' 
($icon_colors.0)   '7YGBBGGPPPPPGBBG5?'   
($icon_colors.0)      '~!7JJYYJJ?!~'      
                          "

google: 
$"($icon_colors.3)             ......            
($icon_colors.3)        .:-==========-:.       
($icon_colors.1)     .($icon_colors.3)-==================:     
($icon_colors.1)   .-===($icon_colors.3)================:'     
($icon_colors.1)  :=======($icon_colors.3)-:'      .:-:        
($icon_colors.1) -#+====-'                     
($icon_colors.1).####*+-                       
($icon_colors.1)-######         ($icon_colors.0)==============-
($icon_colors.1)=#####+         ($icon_colors.0)=+++++++++++++=
($icon_colors.1)-######         ($icon_colors.0)=============+-
($icon_colors.1).####*+-               ($icon_colors.0).=+===+:
($icon_colors.1) -#+===+=.             ($icon_colors.0)-+===+= 
($icon_colors.1)  :=+===++($icon_colors.2)-:.      .:-($icon_colors.0)=+===+=  
($icon_colors.1)   '-++=($icon_colors.2)===++======++===($icon_colors.0)=++-   
($icon_colors.1)     '($icon_colors.2)-=+++==========+++=-($icon_colors.0)'    
($icon_colors.2)        ':-==========-:'       
($icon_colors.2)             ''''''            
                               "

vivo: 
$"($icon_colors.0) .--========================--. 
($icon_colors.0):==============================:
($icon_colors.0)-==============================-
($icon_colors.0)-==============================-
($icon_colors.0)-==============================-
($icon_colors.0)-==-($icon_colors.1)#@@@#($icon_colors.0)--==========--($icon_colors.1)#@@@#($icon_colors.0)-==-
($icon_colors.0)-===-($icon_colors.1)#@@@%-($icon_colors.0)-========-($icon_colors.1)-%@@@#($icon_colors.0)-===-
($icon_colors.0)-====-($icon_colors.1)*@@@@+($icon_colors.0)-======-($icon_colors.1)+@@@@*($icon_colors.0)-====-
($icon_colors.0)-=====-($icon_colors.1)+@@@@*($icon_colors.0)-====-($icon_colors.1)*@@@@+($icon_colors.0)-=====-
($icon_colors.0)-======-($icon_colors.1)-%@@@#($icon_colors.0)----($icon_colors.1)#@@@%-($icon_colors.0)-======-
($icon_colors.0)-=======--($icon_colors.1)#@@@%==%@@@#($icon_colors.0)--=======-
($icon_colors.0)-=========-($icon_colors.1)*@@@@@@@@*($icon_colors.0)-=========-
($icon_colors.0)-==========-($icon_colors.1)-#%@@%#-($icon_colors.0)-==========-
($icon_colors.0)-==============================-
($icon_colors.0):==============================:
($icon_colors.0) '--========================--' 
                                "

huawei: 
$"($icon_colors.0)          :+*#.  .#*+:          
($icon_colors.0)         *@@@@#  #@@@@*         
($icon_colors.0)    =+  :@@@@@@..@@@@@@:  +=    
($icon_colors.0)   *@@#: %@@@@@--@@@@@% :%@@*   
($icon_colors.0)  -@@@@@-:@@@@@==@@@@@:-@@@@@-  
($icon_colors.0)  .@@@@@@+-@@@@==@@@@-+@@@@@@.  
($icon_colors.0)=+::+%@@@@*-@@@==@@@-*@@@@%+::+=
($icon_colors.0)#@@%*=+*%@@%-#@--@#-%@@%*+=*%@@#
($icon_colors.0)'%@@@@@#*+*%%:*::*:%%*+*#@@@@@%'
($icon_colors.0)  =*#%%@@%*==:    :==*%@@%%#*=  
($icon_colors.0)   :+****##*-      -*##****+:   
($icon_colors.0)    =%@@%*-          -*%@@%=    
                                "

realme: 
$"($icon_colors.0)+*************+=.     
($icon_colors.0)*#############%@@@#-  
($icon_colors.0)                .+@@* 
($icon_colors.0)                  .@@+
($icon_colors.0)#@@@@@@@@@@@@*     *@%
($icon_colors.0)%@###########-     %@*
($icon_colors.0)#@*              -%@# 
($icon_colors.0)#@*    -*******#@@%=  
($icon_colors.0)#@*    *@@#*###*='    
($icon_colors.0)#@*    .*@#:          
($icon_colors.0)#@*      :%@#:        
($icon_colors.0)#@*        -@@*.      
($icon_colors.0)#@*          =@@+     
($icon_colors.0)#@*            +@@=   
($icon_colors.0)%@#             .*@%- 
($icon_colors.0)=+-               :+*:
                      "

android:
$"($icon_colors.0)         -o          o-         
($icon_colors.0)          +hydNNNNdyh+          
($icon_colors.0)        +mMMMMMMMMMMMMm+        
($icon_colors.0)      `dMM($icon_colors.1)m:($icon_colors.0)NMMMMMMN($icon_colors.1):m($icon_colors.0)MMd`      
($icon_colors.0)      hMMMMMMMMMMMMMMMMMMh      
($icon_colors.0)  ..  yyyyyyyyyyyyyyyyyyyy  ..  
($icon_colors.0).mMMm`MMMMMMMMMMMMMMMMMMMM`mMMm.
($icon_colors.0):MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:
($icon_colors.0):MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:
($icon_colors.0):MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:
($icon_colors.0):MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:
($icon_colors.0)-MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM-
($icon_colors.0) +yy+ MMMMMMMMMMMMMMMMMMMM +yy+ 
($icon_colors.0)      mMMMMMMMMMMMMMMMMMMm      
($icon_colors.0)      `/++MMMMh++hMMMM++/`      
($icon_colors.0)          MMMMo  oMMMM          
($icon_colors.0)          MMMMo  oMMMM          
($icon_colors.0)          oNMm-  -mMNs          
                                "

    }
    if ($icon_key in $ascii_icons) {
        echo $ascii_icons | get $icon_key
    } else {
        echo $ascii_icons | get "android"
    }
}

def mfr_info [] {
    let mfr = (getprop ro.product.manufacturer)
    echo $mfr
}

def rooted_info [] {
    if ((whoami) == "root") {
        echo "rooted"
    } else {
        let root_paths = [
            "/system/bin/su"
            "/system/xbin/su"
            "/sbin/su"
        ]

        if ($root_paths | any { |it| $it | path exists }) {
            echo "su detected"
        } else {
            echo "su not detected"
        }
    }
}

def host_name_info [] {
    let host_name = (sys host | get "name")
    echo $host_name
}

def kernel_info [] {
    let kernel_release = (uname | get "kernel-release")
    echo $kernel_release
}

def version_info [ --show_version --show_time ] {
    mut output_str = ""
    if $show_version { $output_str += $"Android (getprop ro.build.version.release)" }
    if $show_version and $show_time { $output_str += " " }
    if $show_time { $output_str += $"\((getprop ro.build.version.security_patch)\)" }
    echo $output_str
}

def machine_info [] {
    let machine = (uname | get "machine")
    echo $machine
}

def cpu_info [] {
    let cpu = (open /proc/cpuinfo | lines | where $it =~ 'Hardware' | split column ': ' | get "column2" | uniq | str join ', ')
    if $cpu == "" {
        echo "* Undetectable *"
    } else {
        echo $cpu
    }
}

def memory_info [] {
    open /proc/meminfo | grep MemTotal | awk '{printf "%.2f GB", $2/1024/1024}'
}

def get_shell [] {
    mut shell = ($env | get "shell"? | default "/system/bin/sh") # $SHELL 可能不存在，默认 sh
    let shell_path = $shell | split row "/"
    let path_len = $shell_path | length

    echo $shell_path | last
}

def color_info [type] {
    mut text = ""
    mut t = 4
    if $type == "bright" {
        $t = 10
    }

    for $j in 0..7 {
        $text += $"\e[($t)($j)m   \e[0m"
    }

    echo $text
}

def show_info [brand display_icon show_icon_info json] {
    let colors = get_ascii_colors $display_icon
    let icon = $"(get_ascii_icon $display_icon)"
    let info_list = {
        Brand: $brand
        Mfr: (mfr_info)
        Host: (host_name_info)
        Version: (version_info --show_version --show_time)
        Rernel: (kernel_info)
        Rooted: (rooted_info)
        Machine: (machine_info)
        "CPU Model": (cpu_info)
        Memory: (memory_info)
        Shell: (get_shell)
    }

    if $json == false {
        mut icon_len = ($icon | split row "\n" | length)
        mut icon_wid = ($icon | split row "\n" | last | str length)
        mut space = 4
        
        if $show_icon_info.icon {
            for _ in 1..$icon_len {
                print -n "\n" # 为终端空出位置，如果提示符在终端底下会导致绘制重叠
            }

            print -n $"\e[($icon_len)A"
        } else {
            $icon_len = 0
            $icon_wid = 0
            $space = 0
        }

        print -n $"\e[s"
        
        if $show_icon_info.icon {
            print -n $"\e[u"
            print -n $icon
            print -n "\n"
        }

        if $show_icon_info.info {
            let title = $"(version_info --show_version) / (machine_info)"
            let title_with_ansi = $"($colors.0)(version_info --show_version) \e[0m/ ($colors.0)(machine_info)"
            print -n $"\e[u"
            if $icon_wid + $space > 0 { print -n $"\e[($icon_wid + $space)C" }
            print -n $"($title_with_ansi)"
            print -n $"\e[1B"
            print -n $"\r"
            if $icon_wid + $space > 0 { print -n $"\e[($icon_wid + $space)C" }
            print -n $"\e[0m"
            for _ in 1..($title | str length) { print -n "-" }
            mut output_lines = 2

            let info_list_keys = ($info_list | columns)
            for $i in 1..($info_list_keys | length) {
                let key = ($info_list_keys | get ($i - 1))
                print -n $"\e[u"
                print -n $"\e[($output_lines)B"
                if $icon_wid + $space > 0 { print -n $"\e[($icon_wid + $space)C" }
                print -n $"($colors.0)($key)\e[0m: ($info_list | get $key)"
                print -n $"\n" # 这里的换行是为了防止终端高度不足时 ESC[?B 绘制的文字重叠
                $output_lines += 1
            }

            $output_lines += 1

            for $i in 1..2 {
                let color_type = if $i == 1 { "normal" } else { "bright" }
                print -n $"\e[u"
                print -n $"\e[($output_lines)B"
                if $icon_wid + $space > 0 { print -n $"\e[($icon_wid + $space)C" }
                print -n $"(color_info $color_type)"
                print -n $"\n" # 这里的换行是为了防止终端高度不足时 ESC[?B 绘制的文字重叠
                $output_lines += 1
            }

            if $icon_len > $output_lines {
                print -n $"\e[u"
                print -n $"\e[($icon_len)B" # 把光标重新移动到底部
            } else {
                print -n "\n"
            }
        }
    } else {
        let show_info = if $show_icon_info.icon and $show_icon_info.info {
            echo {
                icon: $icon
                ...$info_list
            }
        } else if $show_icon_info.info {
            echo {
                ...$info_list
            }
        } else if $show_icon_info.icon {
            echo {
                icon: $icon
            }
        } else echo { }

        print ($show_info | to json -i 4)
    }
}

def main [
    --icon: string
    --hide_icon
    --hide_info
    --json
] {
    let os_name = $nu.os-info.name
    if (uname | get "operating-system") != "Android" {
        error make -u {
            msg: "This script is only allowed to run on Android."
        }
    }
    
    let brand = (getprop ro.product.brand)
    mut display_icon = $brand

    if $icon != null {
        $display_icon = $icon
    }
    
    mut show_icon_info = {
        icon: true
        info: true
    }

    if $hide_icon {
        $show_icon_info.icon = false
    }

    if $hide_info {
        $show_icon_info.info = false
    }

    show_info $brand $display_icon $show_icon_info $json
}
